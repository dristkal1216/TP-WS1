@model TP_WS1.Models.Game

@{
	ViewData["Title"] = "Create";

}

<h1>Create</h1>

<h4>Game</h4>
<hr />
<div class="row">
    <div class="col-md-4">
	    <form asp-action="Create">
		    @Html.AntiForgeryToken()
		    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
		    @* <input type="hidden" asp-for="UserId" value="@ViewData["UserId"]" /> *@
		    <input type="hidden" asp-for="GameGenreId"/>
		    <input type="hidden" asp-for="IsArchived" value="false"/>
		    <div class="form-group">
			    <label asp-for="Name" class="control-label"></label>
			    <input asp-for="Name" class="form-control"/>
			    <span asp-validation-for="Name" class="text-danger"></span>
		    </div>
		    <div class="form-group form-check">
			    <label class="form-check-label">
				    <input class="form-check-input" asp-for="IsOnline"/> @Html.DisplayNameFor(model => model.IsOnline)
			    </label>
		    </div>
		    <div class="form-group">
			    <label asp-for="GameEngine" class="control-label"></label>
			    <input asp-for="GameEngine" class="form-control"/>
			    <span asp-validation-for="GameEngine" class="text-danger"></span>
		    </div>
		    <div class="form-group">
			    <input type="submit" value="Create" class="btn btn-primary"/>
		    </div>
	    </form>
    </div>
</div>

<div>
    <a asp-controller="GameGenres" asp-action="Index" asp-route-id=@Model.GameGenreId>Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
